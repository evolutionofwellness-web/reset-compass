document.addEventListener("DOMContentLoaded", () => {
  const splash = document.getElementById("splashScreen");
  const modal = document.getElementById("welcomeModal");
  const app = document.getElementById("appWrapper");
  const startBtn = document.getElementById("startApp");
  const appContent = document.getElementById("appContent");
  const streakDisplay = document.getElementById("streakDisplay");

  // Splash transition + Welcome Modal
  setTimeout(() => {
    splash.style.display = "none";
    const hasSeen = localStorage.getItem("seenWelcome");
    if (!hasSeen) {
      modal.classList.remove("hidden");
    } else {
      app.classList.remove("hidden");
      updateStreak();
    }
  }, 2000);

  // Welcome modal -> App
  startBtn.addEventListener("click", () => {
    modal.classList.add("hidden");
    localStorage.setItem("seenWelcome", "true");
    app.classList.remove("hidden");
    updateStreak();
  });

  // Navigation
  window.navigate = (target) => {
    const views = appContent.querySelectorAll("section");
    views.forEach(view => view.classList.add("hidden"));
    document.getElementById(target).classList.remove("hidden");
  };

  // Activity logging
  function logActivity(mode, activityIndex, text) {
    const today = new Date().toISOString().split("T")[0];
    const history = JSON.parse(localStorage.getItem("history") || "{}");

    if (!history[today]) {
      history[today] = { mode, activities: {} };
    }
    if (!history[today].activities) {
      history[today].activities = {};
    }
    history[today].activities[activityIndex] = text;

    localStorage.setItem("history", JSON.stringify(history));
    updateStreak();
  }

  // Mode button click
  document.querySelectorAll(".mode-button").forEach(button => {
    button.addEventListener("click", () => {
      const mode = button.getAttribute("data-mode");
      navigate(`${mode.toLowerCase()}Page`);
    });
  });

  // Compass click
  const compass = document.getElementById("compass");
  if (compass) {
    compass.querySelectorAll("path").forEach(path => {
      path.addEventListener("click", () => {
        const mode = path.getAttribute("data-mode");
        navigate(`${mode.toLowerCase()}Page`);
      });
    });
  }

  // Textbox event listeners for all activities
  document.querySelectorAll("textarea[data-mode][data-activity]").forEach(textarea => {
    textarea.addEventListener("change", (e) => {
      const mode = e.target.getAttribute("data-mode");
      const index = e.target.getAttribute("data-activity");
      const text = e.target.value.trim();
      if (text.length > 0) {
        logActivity(mode, index, text);
      }
    });
  });

  // Streak logic
  function updateStreak() {
    const history = JSON.parse(localStorage.getItem("history") || "{}");
    const today = new Date().toISOString().split("T")[0];

    // Only allow 1 streak update per new day
    let streak = 0;
    let currentDate = new Date();

    while (true) {
      const dateStr = currentDate.toISOString().split("T")[0];
      if (history[dateStr]) {
        streak++;
        currentDate.setDate(currentDate.getDate() - 1);
      } else {
        break;
      }
    }

    if (streakDisplay) {
      streakDisplay.innerHTML = `ðŸ”¥ ${streak}-day streak`;
    }

    updateHistoryUI(history);
  }

  // History view
  function updateHistoryUI(history) {
    const list = document.getElementById("historyList");
    if (!list) return;
    list.innerHTML = "";

    const sortedDates = Object.keys(history).sort().reverse();
    sortedDates.forEach(date => {
      const entry = history[date];
      const activities = entry.activities || {};
      const activityList = Object.values(activities)
        .map((val, i) => `â€¢ ${val}`)
        .join("<br>");

      const item = document.createElement("li");
      item.innerHTML = `<strong>${date}</strong><br>Mode: ${entry.mode}<br>${activityList}`;
      list.appendChild(item);
    });
  }

  // Initialize on load
  updateStreak();
});